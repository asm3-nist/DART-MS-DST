dev_mode = 1
lb_mode  = 0
# load custom written functions
# source("Functions/asm-LibraryBuilder.R")
# source("Functions/asm-RefLibraryBuilder.R")
source("source/Functions/asm-spec2dt.R")
source("source/Functions/asm-bpNormalizer.R")
source("source/Functions/asm-targetMolecules.R")
# source("Functions/asm-DARTLibrary_Search.R")
# source("Functions/asm-DARTLibrary_Search_app.R")
source("source/Functions/asm-spec2dt_ref.R")
source("source/Functions/asm-revMatchFactor.R")
source("source/Functions/asm-PeaksExplained.R")
source("source/Functions/asm-specImport.R")
source("source/Functions/asm-clc.R")
source("source/Functions/asm-mass-diff.R")
clc()
y = 1
if (y==1){
RefLibrary = readRDS("Libraries/test1DART_windows.RDS")
}
y = 1
if (y==1){
RefLibrary = readRDS("../Libraries/test1DART_windows.RDS")
}
RefLibSize = dim(RefLibrary);
LibraryCats = colnames(RefLibrary)
iCode = which(LibraryCats=="Code")
iName = which(LibraryCats=="Name")
iFormula = which(LibraryCats=="Formula")
iInChIKey = which(LibraryCats=="InChIKey_gen")
iPrecursorMZ = which(LibraryCats=="PrecursorMZ_gen")
iDimerProb = which(LibraryCats=="DimerProb")
iSmiles = which(LibraryCats=="SMILES")
iPotentialErrors = which(LibraryCats=="PotentialErrors")
iMassCaliError = which(LibraryCats=="MassCaliError")
iPotentialErrorsFM1 = which(LibraryCats=="PotentialErrorsFM1" )
iExactMass = which(LibraryCats=="AccurateMass_gen")
shiny::runApp('~/Desktop/DART2020/ProductionCode/NIST-DARTMS-DST')
dev_mode = 1
source('~/Desktop/DART2020/ForGithub/DST/v0/shiny/source/asm_Header.R')
getwd()
Library = readRDS("../Libraries/NIST-DARTMS-Forenics-v1.0.RDS")
Library = readRDS("../Libraries/NIST-DARTMS-Forenics-v.1.0.RDS")
library(data.table)
Library = readRDS("../Libraries/NIST-DARTMS-Forenics-v.1.0.RDS")
Library = readRDS("../Libraries/NIST-DARTMS-Forenics-v1.0.RDS")
Library = readRDS("Libraries/NIST-DARTMS-Forenics-v1.0.RDS")
getwd()
setwd("../Libraries")
Library = readRDS("NIST-DARTMS-Forensics-v1.0.RDS")
View(Library)
colnames(Library)
